plugins {
	id 'org.springframework.boot' version '2.4.0'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id "org.sonarqube" version "3.3"
}
if (System.getProperty("sonar.host.url") == null || System.getProperty("sonar.host.url").isEmpty()) {
	System.setProperty("sonar.host.url", "http://localhost:9000")
}

group = 'io.github.aveuiller.experiment'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	// Basics
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// Healthcheck
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	// Database with ORM (Java Persistence API).
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.postgresql:postgresql:42.2.1'
	implementation 'com.h2database:h2:1.4.200'
	// Tests
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
}


// Only use lowercase on docker image name
tasks.named("bootBuildImage") {
	imageName = "${rootProject.name.toLowerCase()}:${version}"
}